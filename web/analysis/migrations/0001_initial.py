# Generated by Django 4.1.3 on 2023-01-30 02:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Function',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Function_content', models.TextField(null=True)),
                ('SourceFun_id', models.IntegerField(null=True)),
                ('Mutation_method', models.IntegerField(null=True)),
                ('Mutation_times', models.IntegerField(null=True)),
                ('Remark', models.TextField(null=True)),
            ],
            options={
                'db_table': 'Table_Function',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Testcase_id', models.IntegerField(null=True)),
                ('Testbed_id', models.IntegerField(null=True)),
                ('Returncode', models.IntegerField(null=True)),
                ('Stdout', models.TextField(null=True)),
                ('Stderr', models.TextField(null=True)),
                ('Duration_ms', models.IntegerField(null=True)),
                ('Seed_coverage', models.DecimalField(decimal_places=3, max_digits=5, null=True)),
                ('Remark', models.TextField(null=True)),
            ],
            options={
                'db_table': 'Table_Result',
            },
        ),
        migrations.CreateModel(
            name='Suspicious_Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Error_type', models.TextField(null=True)),
                ('Testcase_id', models.IntegerField(null=True)),
                ('Function_id', models.IntegerField(null=True)),
                ('Testbed_id', models.IntegerField(null=True)),
                ('Is_filtered', models.TextField(null=True)),
                ('Remark', models.TextField(null=True)),
            ],
            options={
                'db_table': 'Table_Suspicious_Result',
            },
        ),
        migrations.CreateModel(
            name='Testbed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Testbed_name', models.TextField(null=True, verbose_name='Testbed_name')),
                ('Testbed_version', models.TextField(null=True, verbose_name='Testbed_version')),
                ('Testbed_location', models.TextField(null=True, verbose_name='Testbed_location')),
                ('Remark', models.TextField(null=True, verbose_name='Remark')),
            ],
            options={
                'verbose_name': 'engine',
                'verbose_name_plural': 'engine',
                'db_table': 'Table_Testbed',
            },
        ),
        migrations.CreateModel(
            name='Testcase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Testcase_context', models.TextField(null=True)),
                ('SourceFun_id', models.IntegerField(null=True)),
                ('SourceTestcase_id', models.IntegerField(null=True)),
                ('Fuzzing_times', models.IntegerField(null=True)),
                ('Mutation_method', models.IntegerField(null=True)),
                ('Mutation_times', models.IntegerField(null=True)),
                ('Interesting_times', models.IntegerField(null=True)),
                ('Engine_coverage', models.TextField(null=True)),
                ('Engine_coverage_integration_source', models.TextField(null=True)),
                ('Engine_coverage_integration_all', models.TextField(null=True)),
                ('Probability', models.IntegerField(null=True)),
                ('Remark', models.TextField(null=True)),
            ],
            options={
                'db_table': 'Table_Testcase',
            },
        ),
    ]
