{
	// Enforcing options if set to true will generate more errors.
    "bitwise": false ,  //Disable bitwise operators, bitwise operator & is less used in JavaScript, often && is mistyped as &.
    "curly": false , // Loops or conditional statements must be enclosed in parentheses.
    "freeze": false , // Loops or conditional statements must be enclosed in parentheses.
    "latedef": false , // Allow variables to be used before they are defined
    "newcap": false , //Constructor function initialization
    "noarg": false , // Disable arguments.caller and arguments.callee, will be deprecated in the future, ECMAScript 5 disables arguments.callee
    "quotmark": false , // When true, single and double quotes are not allowed.
    "undef": true , //Variables not defined
    "esversion": 10,  //ES2019
	"unused": false , //Variables not used
    "strict":false , // Strict mode
    "shadow": true, // Allow multiple definitions of the same variable name
    "proto": true, // Allow the __proto___ attribute.
    "-W018": false, // Remove Confusing use of '!
    "-W067": false, // Remove Bad invocation
    "-W007": false, // Remove Confusing plusses.
    "-W053": false, // Allow var a = new String("abc")


	// Relaxing options, if set to true, errors will be reduced.
	"asi": true , // Control "missing semicolon" warnings
    "boss": true , // Control "Expected Assignment" warnings
    "debug": true ,//"debug": true
	"elision": true , // This option tells JSHint that your code uses ES3's arrays to omit elements or null elements
	"eqnull": true , // This option disables warnings about == null comparisons.
	"expr": true , // This option disables the errors warned about when using expressions in places where you would normally expect to see assignments or function calls.
    "evil": true , // Control eval to use warnings
    "funcscope": true, // Controls whether global and in-function declarations with the same function name report errors.
    "scripturl": true, // script-targeted URLs
    "laxbreak": true, // Control irregular line breaks
    "node": true, // Controls some features of jshint when running in a nodejs environment.

    "lastsemic": false , // Check that the semicolon after the last statement in a line of code is not missing
    "laxcomma": true , // Check for unsafe line breaks, ignore comma at the top programming style
    "loopfunc": true , // Check for nested functions within loops
    "multistr": true , // Checking multi-line strings
    "notypeof": true , // Check for invalid typeof operator values.
    "sub": true , // person['name'] vs. person.name
    "supernew": true , //new function () { ... } and new Object;
    "validthis": true , // Use this in non-constructor functions.
	"passfail": true  // If true, JSHint will abort the check after the first error is detected
}
